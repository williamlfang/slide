中证指数公司表示，近年来互联网行业已经逐步融合到生产和生活当中。截止2014年底，中国有超过6亿网民，互联网普及率47.9%。阿里巴巴、腾讯、百度等大量的新兴技术类企业赴海外上市，吸引了境外投资者对于中国互联网企业这一群体的关注。中证海外中国互联网30指数，筛选了这一群体中表现最突出的30家公司组成。从最新一期的成分股来看，包括腾讯、百度、阿里巴巴、京东商城、网易、唯品会、携程、奇虎360、优酷土豆、欢聚时代等知名中国互联网企业均是指数样本。该指数的发布，将进一步丰富中证海外市场指数体系，同时也为内地和海外投资者提供了从主题投资角度考察境外证券市场的投资工具。
我还是一名极客，相信并坚持『科技改变生活』的理念，长期关注互联网与虚拟金融的动态发展。我使用Linux操作系统，自学C语言编写程序，开发\LaTeX{}宏包编辑文档，使用R完成数据分析，通过Google获取最新资讯，借助Python处理文本，最近在学习Julia新型编程语言。岭南文化讲究『和气生财』，齐鲁文化强调『兼济天下』，闽南文化侧重『勤劳致富』。深深汲取这些独特迥异却又融汇贯通的文化精髓，我自信能够胜任在不同环境、不同文化、不同市场中工作的各项任务要求。『求知若饥，虚心若愚』，我会在新的工作环境中不断成长，不断得到磨砺，工作兢兢业业，为人勤勤恳恳，希望公司因为我的努力而蒸蒸日上，希望社会因为我的工作而更加美好。
require(quantmod)
getSymbols("DIA", src='yahoo')
chartSeries("DIA")
chartSeries(DIA)
chartSeries(DIA)
stock <- function(stock.code, stock.name,
from = "2000-01-01",
to   = Sys.Date(),
src  = "yahoo"){
## Loading......
library(zoo)
library(xts)
library(TTR)
library(quantmod)
##-----------------------------------------------
## Theme: white
theme.white <- chartTheme("white")
names(theme.white)
theme.white$bg.col <- "white"
theme.white$up.col <- "red"
theme.white$dn.col <- "green"
## Theme: black
theme.black <- chartTheme("black")
names(theme.black)
theme.black$bg.col <- "black"
theme.black$up.col <- "red"
theme.black$dn.col <- "green"
##-----------------------------------------------
## main
ticker <- getSymbols(stock.code,
from = from,
to = to,
src = src,
auto.assign = FALSE)
##
chartSeries(ticker, theme = theme.white,
TA = "addVo(); addSMA(); addEnvelope();
addMACD(); addMomentum(); addROC();
addBBands()",
name = stock.name
)
addLines(v = which(ticker[,4] == max(ticker[,4])),
col = "gray")
}
stock("DIA", "DJIA")
stock <- function(stock.code, stock.name,
from = "2000-01-01",
to   = Sys.Date(),
src  = "yahoo"){
## Loading......
library(zoo)
library(xts)
library(TTR)
library(quantmod)
##-----------------------------------------------
## Theme: white
theme.white <- chartTheme("white")
names(theme.white)
theme.white$bg.col <- "white"
theme.white$up.col <- "red"
theme.white$dn.col <- "green"
## Theme: black
theme.black <- chartTheme("black")
names(theme.black)
theme.black$bg.col <- "black"
theme.black$up.col <- "red"
theme.black$dn.col <- "green"
##-----------------------------------------------
## main
ticker <- getSymbols(stock.code,
from = from,
to = to,
src = src,
auto.assign = FALSE)
##
chartSeries(ticker, theme = theme.white,
TA = "addVo()",
name = stock.name
)
addLines(v = which(ticker[,4] == max(ticker[,4])),
col = "gray")
}
stock("DIA", "DJIA")
stock <- function(stock.code, stock.name,
from = "1896-01-01",
to   = Sys.Date(),
src  = "yahoo"){
## Loading......
library(zoo)
library(xts)
library(TTR)
library(quantmod)
##-----------------------------------------------
## Theme: white
theme.white <- chartTheme("white")
names(theme.white)
theme.white$bg.col <- "white"
theme.white$up.col <- "red"
theme.white$dn.col <- "green"
## Theme: black
theme.black <- chartTheme("black")
names(theme.black)
theme.black$bg.col <- "black"
theme.black$up.col <- "red"
theme.black$dn.col <- "green"
##-----------------------------------------------
## main
ticker <- getSymbols(stock.code,
from = from,
to = to,
src = src,
auto.assign = FALSE)
##
chartSeries(ticker, theme = theme.white,
TA = "addVo()",
name = stock.name
)
addLines(v = which(ticker[,4] == max(ticker[,4])),
col = "gray")
}
stock("DIA", "DJIA")
stock("^DJI", "DJIA", src="google")
stock <- function(stock.code, stock.name,
from = "1896-01-01",
to   = Sys.Date(),
src  = "yahoo"){
## Loading......
library(zoo)
library(xts)
library(TTR)
library(quantmod)
##-----------------------------------------------
## Theme: white
theme.white <- chartTheme("white")
names(theme.white)
theme.white$bg.col <- "white"
theme.white$up.col <- "red"
theme.white$dn.col <- "green"
## main
ticker <- getSymbols(stock.code,
from = from,
to = to,
src = src,
auto.assign = FALSE)
##
chartSeries(ticker, theme = theme.white,
TA = "addVo()",
name = stock.name
)
}
stock("^DJI", "DJIA", src="google")
stock <- function(stock.code, stock.name,
from = "1896-01-01",
to   = Sys.Date(),
src  = "yahoo"){
## Loading......
library(zoo)
library(xts)
library(TTR)
library(quantmod)
##-----------------------------------------------
## Theme: white
theme.white <- chartTheme("white")
names(theme.white)
theme.white$bg.col <- "white"
theme.white$up.col <- "red"
theme.white$dn.col <- "green"
## main
ticker <- getSymbols(stock.code,
from = from,
to = to,
src = src,
auto.assign = TRUE)
##
chartSeries(ticker, theme = theme.white,
TA = "addVo()",
name = stock.name
)
}
stock("^DJI", "DJIA", src="google")
library(XML)
install.packages("XML")
library(XML)
xml.url <- "http://www.w3schools.com/xml/plant_catalog.xml"
install.packages("XML")
library(XML)
install.packages("XML")
a
library(XML)
install.packages("XML")
library(XML)
install.packages("XML2R")
install.packages("XML")
install.packages("XML")
library(XML)
xml.url <- "http://www.w3schools.com/xml/plant_catalog.xml"
# 解析xml页面
xmlfile <- xmlTreeParse(xml.url)
library(devtools)
install_github("williamlfang/rmarkdown")
library(devtools)
install_github("williamlfang/rmarkdown")
library(rmarkdown)
library(devtools)
source('~/.active-rstudio-document', echo=TRUE)
library(devtools)
install_github("williamlfang/rmarkdown")
library(devtools)
install_github("williamlfang/rmarkdown")
install_github("williamlfang/rmarkdown")
install.packages("~/Desktop/rmarkdown-master (1).zip", repos = NULL)
install_github("williamlfang/rmarkdown")
library(devtools)
library(devtools)
install_github("williamlfang/rmarkdown")
install_github("williamlfang/rmarkdown")
library(devtools)
install_github("williamlfang/rmarkdown")
install.packages("tufterhandout")
library(tufterhandout)
install.packages("tufterhandout")
install.packages("tufterhandout")
library("tufterhandout")
library(devtools)
install_github("williamlfang/rmarkdown")
f3 <- function (x, a, b, c,d) a*x^45+b*x^2+c*x+d
a<-1;b<-0;c<-0;d<--0
result <- uniroot(f3,c(-5,5),a=a,b=b,c=c,d=d,tol=0.0001)
result$root
exp(log(4000/45)) - 1
exp(log(4000)/45) - 1
log(exp)
log(10)
exp(log(10))
exp(log(4000)/45) - 1
exp(log(4000)/45) - 1
exp(log(4000)/45) - 1
exp(log(4000)/65) - 1
setwd("/media/william/Storage/slidify/publish")
publish(user = "williamlfang", repo = "slide", host = 'github')
library(slidify)
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
publish(user = "williamlfang", repo = "slide", host = 'github')
